[{"path":"https://acanthiza.github.io/envClean/articles/010_overview.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Overview","text":"envClean CRAN. Install development version GitHub Load envClean","code":"remotes::install_github(\"acanthiza/envClean\") library(\"envClean\")"},{"path":"https://acanthiza.github.io/envClean/articles/010_overview.html","id":"workflow","dir":"Articles","previous_headings":"","what":"Suggested workflow","title":"Overview","text":"many, many iterations, following workflow found ok. ok. awesome cleaning large, unstructured data. Suggested steps cleaning process","code":""},{"path":[]},{"path":"https://acanthiza.github.io/envClean/articles/010_overview.html","id":"filtercleantidy","dir":"Articles","previous_headings":"Key concepts","what":"Filter/clean/tidy","title":"Overview","text":"envClean, helps implementing: filtering: remove rows data frame. may entirely legitimate observations desirable remove purposes downstream analysis. example, [context] one (legitimate) record may meet expectations analysis within [context] list taxa recorded. cleaning: remove observations reduce risk spurious observations included downstream analysis. example, two different data sources may contain observation. analyses perform better records duplicated within context removed. tidying: per tidy data (Wickham 2014) variable column observation unique row. practice tasks often blurred within functions. general process referred cleaning.","code":""},{"path":"https://acanthiza.github.io/envClean/articles/010_overview.html","id":"bins-for-sites-visits-records-taxa","dir":"Articles","previous_headings":"Key concepts","what":"Bins (for sites, visits, records, taxa)","title":"Overview","text":"Due loose definition bins (see ), definitions site, visit, record taxa can change cleaning process. sites spatial locations. may defined latitude, longitude, easting, northing /cell. may duplicated exclusive application context. necessarily defined spatial concepts within context stages cleaning process. env spatial bins usually set add_raster_cell. visits sites plus time, year, month, day (, even hour). , context applied exclusively, may duplicated. env temporal bins usually year, month, occasionally, day. records visits plus observation level taxonomic hierarchy (refered simply ‘taxa’) taxa refers form taxonomic entity. entity may duplicated within visit taxonomy resolved context applied exclusively. env taxonomic bins usually set make_taxonomy(target_rank = “desired rank”) ‘desired_rank’ , say, ‘species’, , say, ‘subspecies’. Throughout series env packages concept context used extensively, least currently, somewhat loosely. Context supplies bins: spatial, temporal taxonomic bins. respect ‘loosely’: context may defined , say, c(\"lat\", \"long\", \"cell\", \"year\", \"month\"). various stages cleaning process every one variables may applicable. running add_raster_cell (assign spatial bin) variable lat long may removed (depending add_xy argument). However context can still used full cleaning steps (via consistent use tidyselect::any_of envClean functions). Note context must applied exclusively point cleaning process (, say, dplyr::distinct(across(any_of(context)))). point extraneous fields/columns beyond context maintained; claim made regarding uniqueness ‘records’ step process.","code":""},{"path":"https://acanthiza.github.io/envClean/articles/010_overview.html","id":"summarising-the-cleaning-process","dir":"Articles","previous_headings":"Key concepts","what":"Summarising the cleaning process","title":"Overview","text":"cleaning process summary functions. Taking advantage requires: suffix short name step cleaning process. e.g. bio_taxa object created applying taxonomic bins, bio_geo_bin object created applying geogrphic bins see envClean::luclean suffixes/short names (clean column) addition ctime (creation time) attribute, probably using envFunc::add_time_stamp() function clean_summary() prepares information, based objects creating cleaning process, can used summary reports. clean_summary() also, optionally (default TRUE) saves start end objects cleaning process. cleaning_text() prepares text, based cleaning summary, can used directly .Rmd. also small .Rmd files /inst match suffix step. Looping child files main .Rmd provides structure output report.","code":""},{"path":"https://acanthiza.github.io/envClean/articles/010_overview.html","id":"coordinate-reference-systems","dir":"Articles","previous_headings":"Key concepts","what":"Coordinate reference systems","title":"Overview","text":"two (possibly three) main coordinate reference systems (crs) worry : crs original records. decimal degrees, using epsg = 4283 likely return correct crs. crs ’d like use spatial data. Set (setup chunk) use_crs = 3577. likely projected crs work best, particularly buffering, filtering etc. crs spatial data imported help cleaning. Try using sf::st_read(\"random_shape_file.shp\") %>% sf::st_tranform(crs = use_crs) deal .","code":""},{"path":"https://acanthiza.github.io/envClean/articles/010_overview.html","id":"import","dir":"Articles","previous_headings":"","what":"Import","title":"Overview","text":"Querying uniting disparate data sources single data set challenge right. See envImport tools assist . ’ve imported combined data, read .","code":""},{"path":[]},{"path":"https://acanthiza.github.io/envClean/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Nigel Willoughby. Author, maintainer. Joel Allan. Author. DEW. Copyright holder.","code":""},{"path":"https://acanthiza.github.io/envClean/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Willoughby N, Allan J (2024). envClean: Clean Biological Data Large Unstructured Dataset(s). R package version 0.0.0.9000, https://acanthiza.github.io/envClean/.","code":"@Manual{,   title = {envClean: Clean Biological Data from Large Unstructured Dataset(s)},   author = {Nigel Willoughby and Joel Allan},   year = {2024},   note = {R package version 0.0.0.9000},   url = {https://acanthiza.github.io/envClean/}, }"},{"path":"https://acanthiza.github.io/envClean/index.html","id":"envclean-an-r-package-to-help-clean-large-unstructured-data-sets","dir":"","previous_headings":"","what":"Clean Biological Data from Large Unstructured Dataset(s)","title":"Clean Biological Data from Large Unstructured Dataset(s)","text":"goal envClean help clean large, unstructured, biological (environmental) data sets. assumes desired end result plausible list taxa recorded space time locations use analysis. authoritative checklist taxa space time locations. many implied explicit decisions make (e.g. may lot work set new data sets), manual input required decisions made - functions potential provide automated workflow combined data analysis-ready data. help reporting cleaning process also included.","code":""},{"path":"https://acanthiza.github.io/envClean/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Clean Biological Data from Large Unstructured Dataset(s)","text":"envClean CRAN. can install development version GitHub : Load envClean","code":"# install.packages(\"devtools\") devtools::install_github(\"Acanthiza/envClean\") library(\"envClean\")"},{"path":"https://acanthiza.github.io/envClean/index.html","id":"filtering-an-area-of-interest","dir":"","previous_headings":"","what":"Filtering an ‘area of interest’","title":"Clean Biological Data from Large Unstructured Dataset(s)","text":"area interest, geographic range, sets spatial boundary cleaning. Adding geographic (spatial) bins based raster spans area interest another way achieve end. example uses flor_all data frame simple feature aoi. Converting flor_all sf allows plotting together. Load flor_all Convert flor_all sf plot together aoi. Records flor_all plotted area interest aoi. Filtering flor_all aoi done filter_geo_range. Check spatial filter worked. plot chunk flor_aoi","code":"flor_all <- tibble::as_tibble(flor_all) flor_all_sf <- flor_all %>%     sf::st_as_sf(coords = c(\"long\", \"lat\")                  , crs = 4326                  )    tmap::tm_shape(aoi            , bbox = sf::st_bbox(flor_all_sf)            ) +     tmap::tm_polygons() +   tmap::tm_shape(flor_all_sf) +     tmap::tm_dots() flor_aoi <- filter_geo_range(flor_all                          , use_aoi = aoi                          ) %>%     envFunc::add_time_stamp() #> Joining with `by = join_by(long, lat)`    flor_aoi #> # A tibble: 1,419 × 10 #>     long   lat      area data_name site       date       original_name          rel_metres month  year #>    <dbl> <dbl>     <dbl> <fct>     <chr>      <date>     <chr>                       <dbl> <dbl> <dbl> #>  1  140. -34.5 81695918. GBIF      2573957849 2020-02-22 Eremophila glabra             500     2  2020 #>  2  140. -34.5 81695918. GBIF      3902768443 2022-08-14 Triodia scariosa               NA     8  2022 #>  3  140. -34.5 81695918. GBIF      3902326597 2022-08-14 Beyeria lechenaultii           NA     8  2022 #>  4  140. -34.5 81695918. GBIF      3902042262 2022-08-14 Walsholaria magniflora         NA     8  2022 #>  5  140. -34.5 81695918. GBIF      3058875475 2019-09-01 Triodia scariosa              564     9  2019 #>  6  140. -34.5 81695918. GBIF      3058756300 2019-09-01 Westringia rigida             564     9  2019 #>  7  140. -34.5 81695918. GBIF      3902151141 2022-08-14 Phebalium bullatum             NA     8  2022 #>  8  140. -34.5 81695918. GBIF      3902634058 2022-08-14 Acacia rigens                  NA     8  2022 #>  9  140. -34.5 81695918. GBIF      3902018286 2022-08-14 Exocarpos aphyllus             NA     8  2022 #> 10  140. -34.5 81695918. GBIF      3923355578 2022-08-14 Maireana radiata               NA     8  2022 #> # ℹ 1,409 more rows flor_aoi_sf <- flor_aoi %>%     sf::st_as_sf(coords = c(\"long\", \"lat\")                  , crs = 4326                  )    tmap::tm_shape(aoi            , bbox = sf::st_bbox(flor_all_sf)            ) +     tmap::tm_polygons() +   tmap::tm_shape(flor_aoi_sf) +     tmap::tm_dots()"},{"path":"https://acanthiza.github.io/envClean/index.html","id":"what-else-is-in-envclean","dir":"","previous_headings":"","what":"What else is in envClean","title":"Clean Biological Data from Large Unstructured Dataset(s)","text":"following functions data sets provided envClean. See https://acanthiza.github.io/envClean/ examples.","code":""},{"path":"https://acanthiza.github.io/envClean/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 envClean authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://acanthiza.github.io/envClean/reference/add_cover.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate best guess of cover for each taxa*context — add_cover","title":"Generate best guess of cover for each taxa*context — add_cover","text":"Generate best guess cover taxa*context","code":""},{"path":"https://acanthiza.github.io/envClean/reference/add_cover.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate best guess of cover for each taxa*context — add_cover","text":"","code":"add_cover(   df,   context = \"cell\",   env_prcomp,   lucover,   lucover_col = \"cover_mid\",   small_cov = 0.009,   remove_all_small = TRUE,   fix_1to100 = TRUE )"},{"path":"https://acanthiza.github.io/envClean/reference/add_cover.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate best guess of cover for each taxa*context — add_cover","text":"df Dataframe context, taxa cover columns. context Character. Name columns defining context. env_prcomp List. Result call envClean::env_pca() lucover Dataframe. Lookup cover_code numeric cover values small_cov small cover value assigned record available site, pca taxa cover value. remove_all_small Logical. TRUE (default) context(s) taxa assigned small_cov removed. fix_1to100 Logical. values found cover field df 1 less equal 100 divided 100. lucover_co Character. Name column lucover containing cover values use cover_code","code":""},{"path":"https://acanthiza.github.io/envClean/reference/add_cover.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate best guess of cover for each taxa*context — add_cover","text":"Dataframe cov_col removed replaced best guess cover column use_cover","code":""},{"path":"https://acanthiza.github.io/envClean/reference/add_height.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate best guess of height for each taxa*context — add_height","title":"Generate best guess of height for each taxa*context — add_height","text":"Generate best guess height taxa*context","code":""},{"path":"https://acanthiza.github.io/envClean/reference/add_height.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate best guess of height for each taxa*context — add_height","text":"","code":"add_height(df, context = \"cell\", env_prcomp, lustr, lustr_col = \"ht\")"},{"path":"https://acanthiza.github.io/envClean/reference/add_height.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate best guess of height for each taxa*context — add_height","text":"df Dataframe context, taxa height columns. context Character. Name columns defining context. env_prcomp List. Result call envClean::env_pca() lustr Dataframe. Lookup lifeform numeric height values lustr_col Character. Name column lustr containing height values use lifeform","code":""},{"path":"https://acanthiza.github.io/envClean/reference/add_height.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate best guess of height for each taxa*context — add_height","text":"Dataframe cov_col removed replaced best guess height column use_height","code":""},{"path":"https://acanthiza.github.io/envClean/reference/add_lifeform.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate best guess of lifeform for each taxa*context — add_lifeform","title":"Generate best guess of lifeform for each taxa*context — add_lifeform","text":"Generate best guess lifeform taxa*context","code":""},{"path":"https://acanthiza.github.io/envClean/reference/add_lifeform.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate best guess of lifeform for each taxa*context — add_lifeform","text":"","code":"add_lifeform(df, context = \"cell\", env_prcomp, lulife)"},{"path":"https://acanthiza.github.io/envClean/reference/add_lifeform.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate best guess of lifeform for each taxa*context — add_lifeform","text":"df Dataframe context, taxa lifeform columns. context Character. Name columns defining context. env_prcomp List. Result call envClean::env_pca() lulife Dataframe lookup lifeform.","code":""},{"path":"https://acanthiza.github.io/envClean/reference/add_lifeform.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate best guess of lifeform for each taxa*context — add_lifeform","text":"Dataframe best guess lifeform replacing original lifeform.","code":""},{"path":"https://acanthiza.github.io/envClean/reference/aoi.html","id":null,"dir":"Reference","previous_headings":"","what":"Simple feature to define a geographic area of interest. — aoi","title":"Simple feature to define a geographic area of interest. — aoi","text":"aoi defines area northern Murray Mallee South Australia.","code":""},{"path":"https://acanthiza.github.io/envClean/reference/aoi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simple feature to define a geographic area of interest. — aoi","text":"","code":"aoi"},{"path":"https://acanthiza.github.io/envClean/reference/aoi.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Simple feature to define a geographic area of interest. — aoi","text":"simple feature 1 rows 2 variables: area Area simple feature sqare metres. geometry List column geometry.","code":""},{"path":"https://acanthiza.github.io/envClean/reference/bin_taxa.html","id":null,"dir":"Reference","previous_headings":"","what":"Add taxa column — bin_taxa","title":"Add taxa column — bin_taxa","text":"taxa column returned data frame best match name taxa_col based supplied taxonomy.","code":""},{"path":"https://acanthiza.github.io/envClean/reference/bin_taxa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add taxa column — bin_taxa","text":"","code":"bin_taxa(df, taxa_col = \"original_name\", taxonomy, include_levels = NULL)"},{"path":"https://acanthiza.github.io/envClean/reference/bin_taxa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add taxa column — bin_taxa","text":"df Dataframe attribute best result GBIF Backbone Taxonomy taxa_col Character. Name column df taxa. taxonomy list (least) named elements lutaxa taxonomy. Usually resulting call envClean::make_taxonomy(). include_level Character (NULL). Name(s) extra columns taxa$taxonomy return. e.g. include_levels = \"kingdom\" return kingdom taxa.","code":""},{"path":"https://acanthiza.github.io/envClean/reference/bin_taxa.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add taxa column — bin_taxa","text":"Dataframe added column taxa, possibly include_levels","code":""},{"path":"https://acanthiza.github.io/envClean/reference/cleaning_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Describte change in taxa, records, visits and sites between cleaning steps — cleaning_summary","title":"Describte change in taxa, records, visits and sites between cleaning steps — cleaning_summary","text":"Describte change taxa, records, visits sites cleaning steps","code":""},{"path":"https://acanthiza.github.io/envClean/reference/cleaning_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Describte change in taxa, records, visits and sites between cleaning steps — cleaning_summary","text":"","code":"cleaning_summary(prefix = \"bio_\", save_ends = TRUE, save_dir = \"out\", ...)"},{"path":"https://acanthiza.github.io/envClean/reference/cleaning_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Describte change in taxa, records, visits and sites between cleaning steps — cleaning_summary","text":"prefix Character. Prefix used name objects cleaning process save_ends Logical. Save first last data frames created cleaning process? save_dir Character. Path save objects save_ends == TRUE ... Passed envClean::rec_vis_sit_tax()","code":""},{"path":"https://acanthiza.github.io/envClean/reference/cleaning_text.html","id":null,"dir":"Reference","previous_headings":"","what":"Write a sentence describing change in taxa, records, visits and sites between\r\ntwo cleaning steps — cleaning_text","title":"Write a sentence describing change in taxa, records, visits and sites between\r\ntwo cleaning steps — cleaning_text","text":"Write sentence describing change taxa, records, visits sites two cleaning steps","code":""},{"path":"https://acanthiza.github.io/envClean/reference/cleaning_text.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write a sentence describing change in taxa, records, visits and sites between\r\ntwo cleaning steps — cleaning_text","text":"","code":"cleaning_text(cleaning_summary)"},{"path":"https://acanthiza.github.io/envClean/reference/cleaning_text.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write a sentence describing change in taxa, records, visits and sites between\r\ntwo cleaning steps — cleaning_text","text":"cleaning_summary Dataframe. Result call envClean::cleaning_summary()","code":""},{"path":"https://acanthiza.github.io/envClean/reference/cleaning_text.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write a sentence describing change in taxa, records, visits and sites between\r\ntwo cleaning steps — cleaning_text","text":"Dataframe added columns can used .Rmd report cleaning process.","code":""},{"path":"https://acanthiza.github.io/envClean/reference/clean_quotes.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove any ' or ","title":"Remove any ' or ","text":"Useful due reliance original_name 'id' throughout env packages. removed, quotes sometimes escaped underlying functions used, apparently creating duplicates among original_name.","code":""},{"path":"https://acanthiza.github.io/envClean/reference/clean_quotes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove any ' or ","text":"","code":"clean_quotes(df, cols = \"original_name\")"},{"path":"https://acanthiza.github.io/envClean/reference/clean_quotes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove any ' or ","text":"df Dataframe cols Character. Column remove quotes","code":""},{"path":"https://acanthiza.github.io/envClean/reference/clean_quotes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove any ' or ","text":"Dataframe quotes removed cols","code":""},{"path":"https://acanthiza.github.io/envClean/reference/clean_quotes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove any ' or ","text":"","code":"x <- data.frame(a = c(\"species A\", \"species 'A'\")) clean_quotes(x, cols = \"a\") #>           a #> 1 species A #> 2 species A"},{"path":"https://acanthiza.github.io/envClean/reference/filter_counts.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter any context with less instances than a threshold value — filter_counts","title":"Filter any context with less instances than a threshold value — filter_counts","text":"Filter context less instances threshold value","code":""},{"path":"https://acanthiza.github.io/envClean/reference/filter_counts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter any context with less instances than a threshold value — filter_counts","text":"","code":"filter_counts(df, context, thresh = 1)"},{"path":"https://acanthiza.github.io/envClean/reference/filter_counts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter any context with less instances than a threshold value — filter_counts","text":"df Dataframe column names defining context. context Character. columns defining context within count instances. thresh Numeric. Threshold (inclusive thresh) filter.","code":""},{"path":"https://acanthiza.github.io/envClean/reference/filter_counts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter any context with less instances than a threshold value — filter_counts","text":"Filtered dataframe names df","code":""},{"path":"https://acanthiza.github.io/envClean/reference/filter_geo_range.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter a dataframe with e/n or lat/long to an area of interest polygon (sf) — filter_geo_range","title":"Filter a dataframe with e/n or lat/long to an area of interest polygon (sf) — filter_geo_range","text":"Filter dataframe e/n lat/long area interest polygon (sf)","code":""},{"path":"https://acanthiza.github.io/envClean/reference/filter_geo_range.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter a dataframe with e/n or lat/long to an area of interest polygon (sf) — filter_geo_range","text":"","code":"filter_geo_range(df, use_aoi, x = \"long\", y = \"lat\", crs_df = 4326)"},{"path":"https://acanthiza.github.io/envClean/reference/filter_geo_range.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter a dataframe with e/n or lat/long to an area of interest polygon (sf) — filter_geo_range","text":"df Dataframe. Needs coordinate columns use_aoi sf. Name sf object defining area interest x Character. Name column x coord y Character. Name column y coord crs_df Anything return legitimate crs passed crs attribute st_transform st_as_sf","code":""},{"path":"https://acanthiza.github.io/envClean/reference/filter_geo_range.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter a dataframe with e/n or lat/long to an area of interest polygon (sf) — filter_geo_range","text":"Dataframe filtered area interest","code":""},{"path":"https://acanthiza.github.io/envClean/reference/filter_prop.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter taxa recorded at less than x percent of visits — filter_prop","title":"Filter taxa recorded at less than x percent of visits — filter_prop","text":"Filter taxa recorded less x percent visits","code":""},{"path":"https://acanthiza.github.io/envClean/reference/filter_prop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter taxa recorded at less than x percent of visits — filter_prop","text":"","code":"filter_prop(df, context = \"cell\", min_sites = 15, keep = NULL, default_per = 1)"},{"path":"https://acanthiza.github.io/envClean/reference/filter_prop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter taxa recorded at less than x percent of visits — filter_prop","text":"df Dataframe taxa context context Character. Column names define context, usually 'visit' 'cell'. min_sites Absolute minimum sites taxa recorded. keep Character. taxa dropped. Used set x percent sites. default_per keeptaxa NULL, minimum percent sites taxa recorded.","code":""},{"path":"https://acanthiza.github.io/envClean/reference/filter_prop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter taxa recorded at less than x percent of visits — filter_prop","text":"df filtered exclude taxa recorded less x percent visits.","code":""},{"path":"https://acanthiza.github.io/envClean/reference/filter_taxa.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean/Tidy to one row per taxa*Visit — filter_taxa","title":"Clean/Tidy to one row per taxa*Visit — filter_taxa","text":"Deprecated favour simpler workflow involving make_taxonomy bin_taxa (along bins, say, geographic temporal). Required attributes added taxa; context /taxa + context reducing distinct context associated attributes.","code":""},{"path":"https://acanthiza.github.io/envClean/reference/filter_taxa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean/Tidy to one row per taxa*Visit — filter_taxa","text":"","code":"filter_taxa(   df,   taxa_col = \"original_name\",   context,   extra_cols = NULL,   required_rank = \"species\",   do_cov = FALSE,   do_life = FALSE,   lucov = NULL,   lulife = NULL,   taxonomy )"},{"path":"https://acanthiza.github.io/envClean/reference/filter_taxa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean/Tidy to one row per taxa*Visit — filter_taxa","text":"df Dataframe clean, filter tidy respect taxonomy. taxa_col Character. Name column taxa. context Character. Name columns defining context. extra_cols Character. Name extra columns keep. required_rank Character. Default 'species'. level taxonomic hierarchy required results. Records level filtered. do_cov Logical. cover (needs supplied df) appended output. do_life Logical. lifeform (needs supplied df) appended output. lucov Dataframe lookup cover. lulife Dataframe lookup lifeform. taxonomy list (least) named elements lutaxa taxonomy. Usually resulting call envClean::make_taxonomy(). do_ind Logical. ind (needs supplied df) appended output.","code":""},{"path":"https://acanthiza.github.io/envClean/reference/filter_taxa.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean/Tidy to one row per taxa*Visit — filter_taxa","text":"Dataframe columns taxa, context , possibly, extracols , lifeform cover","code":""},{"path":"https://acanthiza.github.io/envClean/reference/filter_text_col.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter a dataframe column on character string(s) — filter_text_col","title":"Filter a dataframe column on character string(s) — filter_text_col","text":"Filter dataframe column character string(s)","code":""},{"path":"https://acanthiza.github.io/envClean/reference/filter_text_col.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter a dataframe column on character string(s) — filter_text_col","text":"","code":"filter_text_col(df, filt_col, filt_text, keep_text = FALSE, df_join = NULL)"},{"path":"https://acanthiza.github.io/envClean/reference/filter_text_col.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter a dataframe column on character string(s) — filter_text_col","text":"df Dataframe column filter. filt_col Character. Name column filter. filt_text Character string(s) find filt_col. keep_text Logical. Keep remove instances filt_text? df_join Optional dataframe. Joined df filter. names df_join returned.","code":""},{"path":"https://acanthiza.github.io/envClean/reference/filter_text_col.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter a dataframe column on character string(s) — filter_text_col","text":"Filtered dataframe names df.","code":""},{"path":"https://acanthiza.github.io/envClean/reference/find_outliers.html","id":null,"dir":"Reference","previous_headings":"","what":"Find local outliers — find_outliers","title":"Find local outliers — find_outliers","text":"Find local outliers","code":""},{"path":"https://acanthiza.github.io/envClean/reference/find_outliers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find local outliers — find_outliers","text":"","code":"find_outliers(   df,   context,   do_out = c(\"lof\", \"LOOP\"),   lof_minPts = 5,   LOOP_k = 5,   LOOP_lambda = 3,   iqrMult = 2 )"},{"path":"https://acanthiza.github.io/envClean/reference/find_outliers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find local outliers — find_outliers","text":"df Dataframe context columns defining space look outliers. context Character. Name columns defining context. do_out Character vector methods use. lof_minPts dbscan::lof() minPts argument. LOOP_k DDoutlier::LOOP() k argument. LOOP_lambda DDoutlier::LOOP() lambda argument. iqrMult Used quantile(x, probs = 0.75) + iqrMult * IQR(x). ggplot2::geom_boxplot() default value 1.5.","code":""},{"path":"https://acanthiza.github.io/envClean/reference/find_taxa.html","id":null,"dir":"Reference","previous_headings":"","what":"Find how taxa changed through the cleaning/filtering/tidying process — find_taxa","title":"Find how taxa changed through the cleaning/filtering/tidying process — find_taxa","text":"find_taxa work hierarchically. example Eucalyptus match genus level records, species records, Eucalyptus leucoxylon.","code":""},{"path":"https://acanthiza.github.io/envClean/reference/find_taxa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find how taxa changed through the cleaning/filtering/tidying process — find_taxa","text":"","code":"find_taxa(   taxa_to_find,   taxa_cols = c(\"original_name\", \"taxa\"),   lutaxa,   filt_df_prefix = \"flor_\" )"},{"path":"https://acanthiza.github.io/envClean/reference/find_taxa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find how taxa changed through the cleaning/filtering/tidying process — find_taxa","text":"taxa_to_find Character. Taxa name find. taxa_cols Character. Name column(s) across data frames containing taxa information. lutaxa Dataframe column names matching taxa_cols, usually, say, taxonomy$species$lutaxa result make_taxonomy(). filt_df_prefix Character. Prefix used data frames created step filtering process.","code":""},{"path":"https://acanthiza.github.io/envClean/reference/find_taxa.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find how taxa changed through the cleaning/filtering/tidying process — find_taxa","text":"","code":"# library(envClean)  # Example taxa use_taxa <- \"Eucalyptus gracilis\"  # Set context context <- c(\"lat\", \"long\", \"month\", \"year\")  # Start flor_start <- flor_all %>%   tibble::as_tibble() %>%   envFunc::add_time_stamp()  # Remove singletons flor_single <- flor_start %>%   filter_counts(context = context                 , thresh = 5                 ) %>%   envFunc::add_time_stamp()  # Just keep most recent contexts flor_recent <- flor_single %>%   dplyr::group_by(across(any_of(context[!context %in% c(\"month\", \"year\")]))) %>%   dplyr::filter(year == max(year)                 , month == max(month)                 ) %>%   dplyr::ungroup() %>%   envFunc::add_time_stamp()  # make_taxonomy taxa <- make_taxonomy(df = flor_recent) #> Joining with `by = join_by(original_name)` #> galah: version 2.0.2 #> ℹ Default node set to ALA (ala.org.au). #> ℹ See all supported GBIF nodes with `show_all(atlases)`. #> ℹ To change nodes, use e.g. `galah_config(atlas = \"GBIF\")`. #> Querying API ■■                                 5% |  ETA: 22s #> Querying API ■■■                                6% |  ETA: 21s #> Querying API ■■■                                7% |  ETA: 19s #> Querying API ■■■■                               9% |  ETA: 18s #> Querying API ■■■■                              10% |  ETA: 18s #> Querying API ■■■■                              11% |  ETA: 17s #> Querying API ■■■■■                             12% |  ETA: 16s #> Querying API ■■■■■                             14% |  ETA: 16s #> Querying API ■■■■■■                            15% |  ETA: 15s #> Querying API ■■■■■■                            16% |  ETA: 15s #> Querying API ■■■■■■                            18% |  ETA: 15s #> Querying API ■■■■■■■                           19% |  ETA: 14s #> Querying API ■■■■■■■                           21% |  ETA: 14s #> Querying API ■■■■■■■■                          22% |  ETA: 13s #> Querying API ■■■■■■■■                          23% |  ETA: 13s #> Querying API ■■■■■■■■                          25% |  ETA: 13s #> Querying API ■■■■■■■■■                         26% |  ETA: 12s #> Querying API ■■■■■■■■■                         28% |  ETA: 12s #> Querying API ■■■■■■■■■■                        29% |  ETA: 12s #> Querying API ■■■■■■■■■■                        31% |  ETA: 11s #> Querying API ■■■■■■■■■■■                       32% |  ETA: 11s #> Querying API ■■■■■■■■■■■                       33% |  ETA: 11s #> Querying API ■■■■■■■■■■■                       34% |  ETA: 11s #> Querying API ■■■■■■■■■■■■                      36% |  ETA: 10s #> Querying API ■■■■■■■■■■■■                      37% |  ETA: 10s #> Querying API ■■■■■■■■■■■■■                     39% |  ETA: 10s #> Querying API ■■■■■■■■■■■■■                     40% |  ETA: 10s #> Querying API ■■■■■■■■■■■■■                     42% |  ETA:  9s #> Querying API ■■■■■■■■■■■■■■                    43% |  ETA:  9s #> Querying API ■■■■■■■■■■■■■■                    45% |  ETA:  9s #> Querying API ■■■■■■■■■■■■■■■                   46% |  ETA:  8s #> Querying API ■■■■■■■■■■■■■■■                   48% |  ETA:  8s #> Querying API ■■■■■■■■■■■■■■■■                  49% |  ETA:  8s #> Querying API ■■■■■■■■■■■■■■■■                  51% |  ETA:  8s #> Querying API ■■■■■■■■■■■■■■■■■                 52% |  ETA:  8s #> Querying API ■■■■■■■■■■■■■■■■■                 53% |  ETA:  7s #> Querying API ■■■■■■■■■■■■■■■■■■                55% |  ETA:  7s #> Querying API ■■■■■■■■■■■■■■■■■■                57% |  ETA:  7s #> Querying API ■■■■■■■■■■■■■■■■■■                58% |  ETA:  6s #> Querying API ■■■■■■■■■■■■■■■■■■■               60% |  ETA:  6s #> Querying API ■■■■■■■■■■■■■■■■■■■               62% |  ETA:  6s #> Querying API ■■■■■■■■■■■■■■■■■■■■              63% |  ETA:  6s #> Querying API ■■■■■■■■■■■■■■■■■■■■              64% |  ETA:  5s #> Querying API ■■■■■■■■■■■■■■■■■■■■■             66% |  ETA:  5s #> Querying API ■■■■■■■■■■■■■■■■■■■■■             68% |  ETA:  5s #> Querying API ■■■■■■■■■■■■■■■■■■■■■■            69% |  ETA:  5s #> Querying API ■■■■■■■■■■■■■■■■■■■■■■            71% |  ETA:  4s #> Querying API ■■■■■■■■■■■■■■■■■■■■■■■           72% |  ETA:  4s #> Querying API ■■■■■■■■■■■■■■■■■■■■■■■           73% |  ETA:  4s #> Querying API ■■■■■■■■■■■■■■■■■■■■■■■           75% |  ETA:  4s #> Querying API ■■■■■■■■■■■■■■■■■■■■■■■■          77% |  ETA:  3s #> Querying API ■■■■■■■■■■■■■■■■■■■■■■■■          78% |  ETA:  3s #> Querying API ■■■■■■■■■■■■■■■■■■■■■■■■■         80% |  ETA:  3s #> Querying API ■■■■■■■■■■■■■■■■■■■■■■■■■         81% |  ETA:  3s #> Querying API ■■■■■■■■■■■■■■■■■■■■■■■■■■        82% |  ETA:  3s #> Querying API ■■■■■■■■■■■■■■■■■■■■■■■■■■        84% |  ETA:  2s #> Querying API ■■■■■■■■■■■■■■■■■■■■■■■■■■■       85% |  ETA:  2s #> Querying API ■■■■■■■■■■■■■■■■■■■■■■■■■■■       86% |  ETA:  2s #> Querying API ■■■■■■■■■■■■■■■■■■■■■■■■■■■       88% |  ETA:  2s #> Querying API ■■■■■■■■■■■■■■■■■■■■■■■■■■■■      89% |  ETA:  2s #> Querying API ■■■■■■■■■■■■■■■■■■■■■■■■■■■■      91% |  ETA:  1s #> Querying API ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■     93% |  ETA:  1s #> Querying API ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■     94% |  ETA:  1s #> Querying API ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■    96% |  ETA:  1s #> Querying API ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■    98% |  ETA:  0s #> Querying API ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■   99% |  ETA:  0s #> Matched 264 of 265 taxonomic search terms in selected atlas (Australia). #> 1 unmatched search term: #> • \"Kali tragus\" #>  #> Joining with `by = join_by(original_name)` #> Joining with `by = join_by(original_name)` #> saving results to H:/temp/nige\\RtmpQlqYDQ\\file4d143861595f.parquet #> The following were completely unmatched: Kali tragus. Consider providing more taxonomic levels, or an override, for each unmatched taxa? #> Joining with `by = join_by(original_name)` #> Joining with `by = join_by(original_name)`  # bin taxa flor_taxa <- flor_recent %>%   bin_taxa(taxonomy = taxa$species) #> Joining with `by = join_by(original_name)` #> Joining with `by = join_by(taxa)` #> Joining with `by = join_by(original_name)`  # distinct over bins flor_bin <- flor_taxa %>%   dplyr::distinct(taxa, dplyr::across(tidyselect::any_of(context)))  # How did records of 'taxa' change through the filtering? # Eucalyptus gracilis find_taxa(\"Eucalyptus gracilis\"           , lutaxa = taxa$species$lutaxa           ) #> # A tibble: 0 × 9 #> # ℹ 9 variables: name <chr>, obj <list>, has_stamp <lgl>, nrow <dbl>, #> #   ctime <???>, founds <list>, taxa <chr>, records <dbl>, found <chr>  # Chenopodium nutans find_taxa(\"Chenopodium nutans\"           , lutaxa = taxa$species$lutaxa           ) #> # A tibble: 0 × 9 #> # ℹ 9 variables: name <chr>, obj <list>, has_stamp <lgl>, nrow <dbl>, #> #   ctime <???>, founds <list>, taxa <chr>, records <dbl>, found <chr>"},{"path":"https://acanthiza.github.io/envClean/reference/flor_all.html","id":null,"dir":"Reference","previous_headings":"","what":"Example of data combined from several data sources. — flor_all","title":"Example of data combined from several data sources. — flor_all","text":"Example GBIF occurrence data set (GBIF.Org 2022, 2022) .","code":""},{"path":"https://acanthiza.github.io/envClean/reference/flor_all.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example of data combined from several data sources. — flor_all","text":"","code":"flor_all"},{"path":"https://acanthiza.github.io/envClean/reference/flor_all.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example of data combined from several data sources. — flor_all","text":"data frame 5822 rows 9 variables: lat Latitude decimal degrees. long Longitude decimal degrees. data_name Name original data source. site Site name original data source. date Date observation original_name. original_name Taxonomy retrieved data_name. cover Cover estimate (numeric) retrieved data_name. cover_code Cover estimate (ordinal) retrieved data_name. quad_x Length one quadrat edge. quad_y Length quadrat edge. rel_dist Reliability lat long metres. month Month component date. year Year component date.","code":""},{"path":"https://acanthiza.github.io/envClean/reference/flor_all.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Example of data combined from several data sources. — flor_all","text":"GBIF.Org (2022). “GBIF Occurrence Download.” doi:10.15468/DL.V29UQ5 , https://www.gbif.org/occurrence/download/0212209-220831081235567. GBIF.Org (2022). “GBIF Occurrence Download.” doi:10.15468/DL.ZK34YK , https://www.gbif.org/occurrence/download/0213242-220831081235567.","code":""},{"path":"https://acanthiza.github.io/envClean/reference/get_taxonomy.html","id":null,"dir":"Reference","previous_headings":"","what":"Get GBIF backbone taxonomy — get_taxonomy","title":"Get GBIF backbone taxonomy — get_taxonomy","text":"queries GBIF taxa already taxonomy_file.","code":""},{"path":"https://acanthiza.github.io/envClean/reference/get_taxonomy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get GBIF backbone taxonomy — get_taxonomy","text":"","code":"get_taxonomy(   df,   taxa_col = \"original_name\",   taxonomy_file = tempfile(),   force_new = list(original_name = NULL, timediff = as.difftime(26, units = \"weeks\")),   remove_taxa = c(\"BOLD:\", \"dead\", \"unverified\", \"annual herb\", \"annual grass\", \"\\\\?\"),   remove_strings = c(\"\\\\sx\\\\s.*\", \"\\\\sX\\\\s.*\", \"\\\\s\\\\-\\\\-\\\\s.*\",     \"\\\\s\\\\(.*\\\\)\", \"\\\\ssp\\\\.$\", \"\\\\sssp\\\\.$\", \"\\\\sspec\\\\.$\"),   remove_dead = FALSE,   ... )"},{"path":"https://acanthiza.github.io/envClean/reference/get_taxonomy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get GBIF backbone taxonomy — get_taxonomy","text":"df Dataframe taxa column. taxa_col Character. Name column taxa names. unique taxa column appear results column called original_name taxonomy_file Character. Path save results . force_new List elements taxa_col difftime. taxonomy_file already exists taxa_col matches force_new taxonomy_file requeried. Likewise original_name searched since difftime requeried. Note name taxa_col provided per taxa_col argument. Set either NULL ignore. remove_taxa Character. Regular expressions matched. matches filtered searching. Removes rows match. remove_strings Character. Regular expressions matched. matches removed string searching. Removes text matches, row remains. ... Arguments passed rgbif::name_backbone_checklist().","code":""},{"path":"https://acanthiza.github.io/envClean/reference/get_taxonomy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get GBIF backbone taxonomy — get_taxonomy","text":"Dataframe. Results envClean::get_gbif_tax(). Tweaked column rank lowercase ordered factor per envClean::lurank. Writes taxonomy_file gsub(\"\\\\.\", \"_accepted.\", taxonomy_file)","code":""},{"path":"https://acanthiza.github.io/envClean/reference/get_taxonomy.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get GBIF backbone taxonomy — get_taxonomy","text":"Common (vernacularName) longer supported . Use get_gbif_common() downstream result. may helpful keep usageKey cleaning process use getting common names. Part reason removing functionality ambiguity key use, particularly around species vs subspecies.","code":""},{"path":"https://acanthiza.github.io/envClean/reference/luclean.html","id":null,"dir":"Reference","previous_headings":"","what":"Dataframe of cleaning steps — luclean","title":"Dataframe of cleaning steps — luclean","text":"Dataframe cleaning steps","code":""},{"path":"https://acanthiza.github.io/envClean/reference/luclean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataframe of cleaning steps — luclean","text":"","code":"luclean"},{"path":"https://acanthiza.github.io/envClean/reference/luclean.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Dataframe of cleaning steps — luclean","text":"data frame 30 rows 3 variables: clean Character short name cleaning step. desc Phrase describing filtering step. order Suggested order","code":""},{"path":"https://acanthiza.github.io/envClean/reference/lurank.html","id":null,"dir":"Reference","previous_headings":"","what":"Dataframe of taxonomic ranks — lurank","title":"Dataframe of taxonomic ranks — lurank","text":"dataset listing taxonomic rank ordered factor.","code":""},{"path":"https://acanthiza.github.io/envClean/reference/lurank.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataframe of taxonomic ranks — lurank","text":"","code":"lurank"},{"path":"https://acanthiza.github.io/envClean/reference/lurank.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Dataframe of taxonomic ranks — lurank","text":"data frame 10 rows 2 variables: rank Taxonomic rank. sort Numeric. Can used directly sort taxonomic ranks also used create ordered factor rank.","code":""},{"path":"https://acanthiza.github.io/envClean/reference/make_attribute.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — make_attribute","title":"Title — make_attribute","text":"Title","code":""},{"path":"https://acanthiza.github.io/envClean/reference/make_attribute.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — make_attribute","text":"","code":"make_attribute(   df,   taxa_col = \"original_name\",   att_col,   taxonomy,   max_guess = \"family\",   agg_method = median,   agg_round = 2,   unknown_action = c(\"remove\", \"unknown\"),   context = NULL,   remove_strings = c(\"n/a\", \"''\", \"NA\"),   ... )"},{"path":"https://acanthiza.github.io/envClean/reference/make_attribute.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — make_attribute","text":"df Dataframe taxa_col att_col taxa_col Character name column df passed get_taxonomy taxa_col att_col Character name column df contains attribute summarise taxonomy List resulting call make_taxonomy() max_guess Character. attribute available taxa, try guessing values max_guess level taxonomic hierarchy. See lurank. Note make sense provide rank lower target_rank provided make_taxonomy taxonomy made. agg_method Function name use summarising numeric att_col. Ignored att_col numeric agg_round Passed base::round() round argument. Used summarising numeric att_col. unknown_action value can found/guessed: either default 'remove' (record returned); provide value used. used character att_col context columns df maintain throughout summarising. remove_strings Character. values att_col exclude ... Passed agg_method","code":""},{"path":"https://acanthiza.github.io/envClean/reference/make_attribute.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title — make_attribute","text":"Dataframe one row taxa context best guess single attribute based values att_col","code":""},{"path":"https://acanthiza.github.io/envClean/reference/make_con_status.html","id":null,"dir":"Reference","previous_headings":"","what":"Make conservation status from existing status codes — make_con_status","title":"Make conservation status from existing status codes — make_con_status","text":"Useful assigning 'threatened' status binomial different statuses apply trinomial level. resulting 'status' simply concatenated values lower levels taxonomic hierarchy.","code":""},{"path":"https://acanthiza.github.io/envClean/reference/make_con_status.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make conservation status from existing status codes — make_con_status","text":"","code":"make_con_status(   df,   taxa_col = \"taxa\",   status_col = \"epbc\",   statuses = c(\"ssp\", \"VU\", \"EN\", \"sp\", \"CR\", \"EX\", \"CD\", \"V\", \"E\", \"SP\") )"},{"path":"https://acanthiza.github.io/envClean/reference/make_con_status.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make conservation status from existing status codes — make_con_status","text":"df Dataframe taxa_col status_col. taxa_col Character. Name column taxa. status_col Character. Name column conservation status. statuses Character. Possible status codes concatenate.","code":""},{"path":"https://acanthiza.github.io/envClean/reference/make_con_status.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make conservation status from existing status codes — make_con_status","text":"Dataframe unique taxa conservation status.","code":""},{"path":"https://acanthiza.github.io/envClean/reference/make_cover.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a single (numeric, proportion) cover column from different sorts of\r\ninput cover — make_cover","title":"Make a single (numeric, proportion) cover column from different sorts of\r\ninput cover — make_cover","text":"Assumes numeric (percentage) cover column called 'cover' character column called 'cover_code' modified Braun-Blanquet (Braun-Blanquet 1932)  cover value using Biological Databases South Australia codes (COVCODE field BDBSA). Example lucov envEcosystems::lucover.","code":""},{"path":"https://acanthiza.github.io/envClean/reference/make_cover.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a single (numeric, proportion) cover column from different sorts of\r\ninput cover — make_cover","text":"","code":"make_cover(   df,   taxa_col = \"taxa\",   context = NULL,   lucov,   cov_type = \"cover_mid\" )"},{"path":"https://acanthiza.github.io/envClean/reference/make_cover.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a single (numeric, proportion) cover column from different sorts of\r\ninput cover — make_cover","text":"df Dataframe containing columns consolidate. taxa_col Character. Name column containing taxa. context Character. Name columns defining context. lucov Dataframe. Lookup cover_code numeric cover values. cov_type Character. Name column lucov used convert character cover_code numeric values.","code":""},{"path":"https://acanthiza.github.io/envClean/reference/make_cover.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a single (numeric, proportion) cover column from different sorts of\r\ninput cover — make_cover","text":"Dataframe consolidated use_cover column.","code":""},{"path":"https://acanthiza.github.io/envClean/reference/make_cover.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Make a single (numeric, proportion) cover column from different sorts of\r\ninput cover — make_cover","text":"Braun-Blanquet J (1932). Plant sociology. study plant communities., 1st edition. McGraw-Hill Book Co.","code":""},{"path":"https://acanthiza.github.io/envClean/reference/make_effort_mod.html","id":null,"dir":"Reference","previous_headings":"","what":"Distribution of credible values for taxa richness. — make_effort_mod","title":"Distribution of credible values for taxa richness. — make_effort_mod","text":"Model effect 0 2 categorical variables taxa richness within context. Highlight, based thresholds, contexts taxa richness 'excessively' high low.","code":""},{"path":"https://acanthiza.github.io/envClean/reference/make_effort_mod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Distribution of credible values for taxa richness. — make_effort_mod","text":"","code":"make_effort_mod(   df,   context = \"cell\",   cat_cols = NULL,   threshold_lo = 0.05/2,   threshold_hi = 0.05/2,   use_family = rstanarm::neg_binomial_2(),   ... )"},{"path":"https://acanthiza.github.io/envClean/reference/make_effort_mod.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Distribution of credible values for taxa richness. — make_effort_mod","text":"df Dataframe. Cleaned data specifying context. context Character. Column names define context, usually 'visit' 'cell'. cat_cols Character. Name column(s) (0 2) specifying categorical variables model. Usually taxonomic level (say, class) geographic level (say, IBRA Region). NULL (default), model y ~ 1. threshold_lo, threshold_hi Numeric 0 1 specifying threshold /richness excessively 'normal' filtered. use_family Passed rstanarm::stan_glm family argument. ... arguments passed rstanarm::stan_glm (e.g. chains, iter).","code":""},{"path":"https://acanthiza.github.io/envClean/reference/make_effort_mod.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Distribution of credible values for taxa richness. — make_effort_mod","text":"List model outputs: dat_exp dataframe data used pre-model data exploration mod model object mod_pred dataframe resulting rstanarm::posterior_predict mod_resid dataframe residuals mod_resid_plot plot residuals (ggplot object) mod_res dataframe summarised mod_pred results mod_plot plot distribution credible values, faceted variables model mod_cell_result dataframe contexts column keep indicating whether context outside acceptable taxa richness mod_cell_tab dataframe tabulating many contexts acceptable richness quantile thresholds","code":""},{"path":"https://acanthiza.github.io/envClean/reference/make_effort_mod_pca.html","id":null,"dir":"Reference","previous_headings":"","what":"Model the effect of principal components axes on taxa richness. — make_effort_mod_pca","title":"Model the effect of principal components axes on taxa richness. — make_effort_mod_pca","text":"Model effect principal components axes taxa richness.","code":""},{"path":"https://acanthiza.github.io/envClean/reference/make_effort_mod_pca.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Model the effect of principal components axes on taxa richness. — make_effort_mod_pca","text":"","code":"make_effort_mod_pca(   df,   env_prcomp,   context = \"cell\",   threshold_lo = 0.05/2,   threshold_hi = 0.05/2,   effort_col = \"qsize\",   effort_thresh = 3 * 3,   out_file = NULL,   ... )"},{"path":"https://acanthiza.github.io/envClean/reference/make_effort_mod_pca.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Model the effect of principal components axes on taxa richness. — make_effort_mod_pca","text":"df Dataframe. Cleaned data specifying context. env_prcomp Output env_pca. context Character. Column names define context, usually 'visit' 'cell'. threshold_lo, threshold_hi Numeric 0 1 specifying threshold /richness excessively 'normal' filtered. effort_col Character (NULL). Name column measure effort. NULL, contexts used. effort_thresh Numeric. effort_col (used) filtered threshold. out_file Character. Optional path save output. ... Passed rstanarm::stan_glm().","code":""},{"path":"https://acanthiza.github.io/envClean/reference/make_effort_mod_pca.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Model the effect of principal components axes on taxa richness. — make_effort_mod_pca","text":"List model outputs.","code":""},{"path":"https://acanthiza.github.io/envClean/reference/make_env_pca.html","id":null,"dir":"Reference","previous_headings":"","what":"Principal components analysis and various outputs from environmental data — make_env_pca","title":"Principal components analysis and various outputs from environmental data — make_env_pca","text":"Principal components analysis various outputs environmental data","code":""},{"path":"https://acanthiza.github.io/envClean/reference/make_env_pca.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Principal components analysis and various outputs from environmental data — make_env_pca","text":"","code":"make_env_pca(   env_df,   context = \"cell\",   axes = 3,   cuts = 20,   int_style = \"quantile\",   out_file = NULL )"},{"path":"https://acanthiza.github.io/envClean/reference/make_env_pca.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Principal components analysis and various outputs from environmental data — make_env_pca","text":"env_df Dataframe containing 'cell' environmental data. context Character. Name columns defining context. axes Numeric. Number axes return. cuts Numeric. Number cuts along pc1. pcn gets cuts/n cuts. int_style Character. Method passed classInt::classIntervals. out_file Character. Optional path save output.","code":""},{"path":"https://acanthiza.github.io/envClean/reference/make_env_pca.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Principal components analysis and various outputs from environmental data — make_env_pca","text":"List pca outputs.","code":""},{"path":"https://acanthiza.github.io/envClean/reference/make_gbif_taxonomy.html","id":null,"dir":"Reference","previous_headings":"","what":"Make taxonomy lookups — make_gbif_taxonomy","title":"Make taxonomy lookups — make_gbif_taxonomy","text":"Make taxonomy lookups","code":""},{"path":"https://acanthiza.github.io/envClean/reference/make_gbif_taxonomy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make taxonomy lookups — make_gbif_taxonomy","text":"","code":"make_gbif_taxonomy(   df,   taxa_col = \"original_name\",   taxonomy_file,   target_rank = \"species\",   limit = TRUE,   fixes = NULL,   overrides = NULL,   ... )"},{"path":"https://acanthiza.github.io/envClean/reference/make_gbif_taxonomy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make taxonomy lookups — make_gbif_taxonomy","text":"df Dataframe taxa_col. taxa_col Character. Name column df taxa names taxonomy_file Character. Path results envClean::get_taxonomy() target_rank Character. Default 'species'. level taxonomic hierarchy results desired. detailed taxonomy returned. .e. genus target_rank, taxa genus returned. See envClean::lurank rank column. limit Logical. true (default), output taxonomy limited input names df. Otherwise, taxa found taxonomy_file returned. fixes Data frame columns resolved_to prefer. taxa result lutaxa matches name resolved_to changed prefer. Mainly used legitimate names used areas exist. e.g. Eastern osprey Pandion cristatus occur South Australia records species South Australia assumed legitimate Osprey (Pandion haliaetus) records. overrides Data frame columns original prefer. original_name result lutaxa matches name original corresponding taxa changed prefer. Useful GBIF Backbone Taxonomy provides spurious result. e.g. GBIF Backbone Taxonomy changes Thinornis rubricollis Phalaropus lobatus rather preferred Charadrius cucullatus. ... Passed envClean::get_taxonomy()","code":""},{"path":"https://acanthiza.github.io/envClean/reference/make_gbif_taxonomy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make taxonomy lookups — make_gbif_taxonomy","text":"named list elements: lutaxa Dataframe. unique name taxa_col, best taxa use (taking account target_rank) taxonomy Dataframe. taxa lutaxa row taxonomic hierarchy matching gbif usageKeys","code":""},{"path":"https://acanthiza.github.io/envClean/reference/make_ind_status.html","id":null,"dir":"Reference","previous_headings":"","what":"Make indigenous status lookup — make_ind_status","title":"Make indigenous status lookup — make_ind_status","text":"Make indigenous status lookup","code":""},{"path":"https://acanthiza.github.io/envClean/reference/make_ind_status.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make indigenous status lookup — make_ind_status","text":"","code":"make_ind_status(df, taxa_col = \"taxa\", ind_col = \"ind\")"},{"path":"https://acanthiza.github.io/envClean/reference/make_ind_status.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make indigenous status lookup — make_ind_status","text":"df Dataframe taxa column column indicating indigenous status. taxa_col Character. Name column taxa. ind_col Character. Name column indigenous status (assumed , largely, Y N).","code":""},{"path":"https://acanthiza.github.io/envClean/reference/make_ind_status.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make indigenous status lookup — make_ind_status","text":"Dataframe unique taxa indigenous status.","code":""},{"path":"https://acanthiza.github.io/envClean/reference/make_lifeform.html","id":null,"dir":"Reference","previous_headings":"","what":"Get unique lifeform across taxa, perhaps including further context — make_lifeform","title":"Get unique lifeform across taxa, perhaps including further context — make_lifeform","text":"two tasks :","code":""},{"path":"https://acanthiza.github.io/envClean/reference/make_lifeform.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get unique lifeform across taxa, perhaps including further context — make_lifeform","text":"","code":"make_lifeform(   df,   taxa_col = \"taxa\",   lf_col = \"lifeform\",   context = NULL,   lulife )"},{"path":"https://acanthiza.github.io/envClean/reference/make_lifeform.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get unique lifeform across taxa, perhaps including further context — make_lifeform","text":"df Dataframe taxa column. taxa_col Character. Name taxa column. lf_col Character. Name lifeform (id) column. context Charcter NULL. Set columns define context within generate lifeform. lulife Dataframe lookup lifeform.","code":""},{"path":"https://acanthiza.github.io/envClean/reference/make_lifeform.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get unique lifeform across taxa, perhaps including further context — make_lifeform","text":"Dataframe columns taxa_col, visit col(s), lifeform","code":""},{"path":"https://acanthiza.github.io/envClean/reference/make_lifeform.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get unique lifeform across taxa, perhaps including further context — make_lifeform","text":"find frequent lifeform assigned taxa (perhaps including context) ensure duplicates across relevant context","code":""},{"path":"https://acanthiza.github.io/envClean/reference/make_subspecies_col.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a subspecies column — make_subspecies_col","title":"Make a subspecies column — make_subspecies_col","text":"Adds subspecies column within taxonomic results (e.g. make_galah_taxonomy make_gbif_taxonomy). Simultaneously creates rank_adj column relevels rank subspecies subspecies (.e. rank = form variety rank_adj = subspecies)","code":""},{"path":"https://acanthiza.github.io/envClean/reference/make_subspecies_col.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a subspecies column — make_subspecies_col","text":"","code":"make_subspecies_col(   tax_res,   use_levels = levels(envClean::lurank$rank),   remove_strings = \"\\\\s\\\\(.*\\\\)\\\\s\" )"},{"path":"https://acanthiza.github.io/envClean/reference/make_subspecies_col.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a subspecies column — make_subspecies_col","text":"tax_res Dataframe. Probably call galah::search_taxa() use_levels Ordered factor. Ideally match unique rank tax_res remove_brackets Character. Vector regex remove scientific_name creating subspecies column","code":""},{"path":"https://acanthiza.github.io/envClean/reference/make_subspecies_col.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a subspecies column — make_subspecies_col","text":"tax_res extra columns subspecies rank_adj. rank ordered factor.","code":""},{"path":"https://acanthiza.github.io/envClean/reference/make_subspecies_col.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a subspecies column — make_subspecies_col","text":"","code":"taxa <- c(\"Acacia lanigera\", \"Acacia lanigera var. gracilipes\", \"Spyridium glabrisepalum\", \"Spyridium eriocephalum var. glabrisepalum\") taxonomy_result <- galah::search_taxa(taxa) make_subspecies_col(taxonomy_result) |> dplyr::select(search_term, species, subspecies, rank, rank_adj) #> # A tibble: 4 × 5 #>   search_term                               species    subspecies rank  rank_adj #>   <chr>                                     <chr>      <chr>      <ord> <ord>    #> 1 Acacia lanigera                           Acacia la… NA         spec… species  #> 2 Acacia lanigera var. gracilipes           Acacia la… Acacia la… vari… subspec… #> 3 Spyridium glabrisepalum                   Spyridium… Spyridium… vari… subspec… #> 4 Spyridium eriocephalum var. glabrisepalum Spyridium… Spyridium… vari… subspec…"},{"path":"https://acanthiza.github.io/envClean/reference/make_taxonomy.html","id":null,"dir":"Reference","previous_headings":"","what":"Get taxonomy via galah::taxa_search() — make_taxonomy","title":"Get taxonomy via galah::taxa_search() — make_taxonomy","text":"queries galah taxa already taxonomy_file. Can return list, several levels taxonomic hierarchy, 'best' match level. example, 'genus' provided needed_ranks, returned list element 'genus' contains, column named taxa, original names provided, best result genus level higher (cases genus level match available).","code":""},{"path":"https://acanthiza.github.io/envClean/reference/make_taxonomy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get taxonomy via galah::taxa_search() — make_taxonomy","text":"","code":"make_taxonomy(   df = NULL,   taxa_col = \"original_name\",   taxonomy_file = tempfile(),   force_new = list(original_name = NULL, timediff = as.difftime(26, units = \"weeks\")),   remove_taxa = c(\"bold:\", \"BOLD:\", \"unverified\", \"annual herb\", \"annual grass\",     \"incertae sedis\", \"\\\\?\", \"another species\", \"not naturalised in SA\",     \"unidentified\", \"unverified\", \"annual tussock grass\", \"*no id\", \"spec\\\\.\"),   remove_strings = c(\"\\\\s\\\\-\\\\-\\\\s.*\", \"\\\\ssp\\\\.$\", \"\\\\sssp\\\\.$\",     \"\\\\sspec\\\\.$\", \"dead\"),   not_names = c(\"sp\", \"ssp\", \"var\", \"subsp\", \"subspecies\", \"form\", \"race\", \"nov\", \"aff\",     \"cf\", \"lineage\", \"group\", \"et\", \"al\", \"and\", \"pl\", \"revised\", \"nov\"),   tri_strings = c(\"\\\\sssp\\\\s\", \"\\\\sssp\\\\.\\\\s\", \"\\\\svar\\\\s\",     \"\\\\svar\\\\.\\\\s\", \"\\\\ssubsp\\\\.\", \"\\\\ssubspecies\", \"\\\\sform\\\\)\",     \"\\\\sform\\\\s\", \"\\\\sf\\\\.\", \"\\\\srace\\\\s\", \"\\\\srace\\\\)\",     \"\\\\sp\\\\.v\\\\.\"),   atlas = c(\"Australia\"),   return_taxonomy = TRUE,   limit = TRUE,   needed_ranks = c(\"species\"),   overrides = NULL )"},{"path":"https://acanthiza.github.io/envClean/reference/make_taxonomy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get taxonomy via galah::taxa_search() — make_taxonomy","text":"df Dataframe taxa_col. Can NULL taxonomy_file already exists. taxa_col Character index. Name index column taxa names. unique taxa column queried galah::search_taxa appear results list element lutaxain column called original_name taxonomy_file Character. File path save results . File type ignored. .parquet file used. force_new List elements difftime column name taxonomy_file. taxonomy_file already exists column matches force_new taxonomy_file, matching levels within column requeried. Likewise original_name searched since difftime requeried. Set either NULL ignore. remove_taxa Character. Rows regular expressions taxa_col match remove_taxa removed (rows removed). remove_strings Character. Text matches remove_strings removed taxa_col searching (text, row, removed). not_names Character. Text matches non_name_strings used remove non-names original_names word count indicate (guess) original_name trinomial (original_is_tri field lutaxa). tri_strings Character. Text matches tri_strings used indicate original_name trinomial (original_is_tri field output lutaxa). return_taxonomy Logical. TRUE, list returned containing best match original_name lutaxa additional elements named rank (see envClean::lurank) unique rows rank. One element per rank provided needed_ranks limit Logical. TRUE returned list limited original_names df needed_ranks Character vector ranks required returned list. Can \"\" combination ranks envClean::lurank greater equal subspecies. overrides Used override results returned galah::search_taxa(). Dataframe (least) columns: taxa_col taxa_to_search. Can also contain number use_x columns x kingdom, phylum, class, order, family, genus, species, subspecies, variety form. two step process attempts find better results searched taxa_col. Step 1 searches taxa_to_search instead taxa_col. use_x columns present, step 2 checks results step 1 result x. , level x results taken use_x.","code":""},{"path":"https://acanthiza.github.io/envClean/reference/make_taxonomy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get taxonomy via galah::taxa_search() — make_taxonomy","text":"Null list (depending return_taxonomy). Writes taxonomy_file. taxa_col original_name outputs. Note taxa_col, original_name, quotes removed. list, elements: raw - 'raw' results returned galah::search_taxa(), tweaked : column rank ordered factor per envClean::lurank; rank_adj new column reflect rank column unless rank less subspecies, case subspecies; original_is_tri new column needed_ranks - One element rank specified needed_ranks. lutaxa - dataframe. unique name taxa_col, best taxa taxonomic bin use, original_name, taking account level needed_ranks original_name - unique values taxa_col match_type - directly galah::search_taxa() matched_rank - rank column galah::search_taxa() returned_rank - rank taxa returned original_name. never lower needed_rank may higher needed_rank match available needed_rank. Use 'rank' filter bins cleaning workflow taxa - best taxa available original_name needed_rank, perhaps taking account overrides override - taxa result override? original_is_tri - Experimental. original_name trinomial? Highlights cases matched rank > subspecies original_name probably subspecies. Guesses based word count removal : not_names; numbers; punctuation; capitalised words first word; single letter 'words'. tri_strings override guess - flagging TRUE. Note, clearly, (informed) guess whether original_name trinomial. taxonomy - dataframe. taxa lutaxa row taxonomic hierarchy","code":""},{"path":"https://acanthiza.github.io/envClean/reference/make_taxonomy.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get taxonomy via galah::taxa_search() — make_taxonomy","text":"Previous envClean::make_taxonomy() function still available via envClean::make_gbif_taxonomy()","code":""},{"path":"https://acanthiza.github.io/envClean/reference/make_taxonomy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get taxonomy via galah::taxa_search() — make_taxonomy","text":"","code":"# setup   # library(\"envClean\")    temp_file <- tempfile()    taxa_df <- tibble::tibble(taxa = c(\"Charadrius rubricollis\"                                      , \"Thinornis cucullatus\"                                      , \"Melithreptus gularis laetior\"                                      , \"Melithreptus gularis gularis\"                                      , \"Eucalyptus viminalis\"                                      , \"Eucalyptus viminalis cygnetensis\"                                      , \"Eucalyptus\"                                      , \"Charadrius mongolus all subspecies\"                                      , \"Bettongia lesueur Barrow and Boodie Islands subspecies\"                                      , \"Lagorchestes hirsutus Central Australian subspecies\"                                      , \"Perameles gunnii Victorian subspecies\"                                      , \"Pterostylis sp. Rock ledges (pl. 185, Bates & Weber 1990)\"                                      , \"Spyridium glabrisepalum\"                                      , \"Spyridium eriocephalum var. glabrisepalum\"                                      , \"Petrogale lateralis (MacDonnell Ranges race)\"                                      , \"Gehyra montium (revised)\"                                      , \"Korthalsella japonica f. japonica\"                                      , \"Galaxias sp. nov. 'Hunter'\"                                      , \"Not a taxa\"                                      )                             )    # make taxonomy (returns list and writes taxonomy_file)   taxonomy <- make_taxonomy(df = taxa_df                             , taxa_col = \"taxa\"                             , taxonomy_file = temp_file                             , needed_ranks = c(\"kingdom\", \"genus\", \"species\", \"subspecies\")                             ) #> Joining with `by = join_by(original_name)` #> Matched 17 of 19 taxonomic search terms in selected atlas (Australia). #> 2 unmatched search terms: #> • \"Galaxias sp. nov. Hunter\", \"Not a taxa\" #>  #> Joining with `by = join_by(original_name)` #> Joining with `by = join_by(original_name)` #> saving results to H:/temp/nige\\RtmpQlqYDQ\\file4d145d492b1d.parquet #> The following were completely unmatched: Galaxias sp. nov. Hunter and Not a taxa. Consider providing more taxonomic levels, or an override, for each unmatched taxa? #> Joining with `by = join_by(original_name)` #> Joining with `by = join_by(original_name)` #> Joining with `by = join_by(original_name)` #> Joining with `by = join_by(original_name)` #> Joining with `by = join_by(original_name)`   taxonomy$raw #> # A tibble: 19 × 19 #>    original_name              search_term scientific_name scientific_name_auth…¹ #>    <chr>                      <chr>       <chr>           <chr>                  #>  1 Bettongia lesueur Barrow … Bettongia … Bettongia lesu… NA                     #>  2 Charadrius mongolus all s… Charadrius… Charadrius (Ch… Pallas, 1776           #>  3 Charadrius rubricollis     Charadrius… Phalaropus lob… (Linnaeus, 1758)       #>  4 Eucalyptus                 Eucalyptus  Eucalyptus      L'Hér.                 #>  5 Eucalyptus viminalis       Eucalyptus… Eucalyptus vim… Labill.                #>  6 Eucalyptus viminalis cygn… Eucalyptus… Eucalyptus vim… Boomsma                #>  7 Galaxias sp. nov. Hunter   Galaxias s… NA              NA                     #>  8 Gehyra montium (revised)   Gehyra mon… Gehyra montium  Storr, 1982            #>  9 Korthalsella japonica f. … Korthalsel… Korthalsella j… (Thunb.) Engl.         #> 10 Lagorchestes hirsutus Cen… Lagorchest… Lagorchestes h… Gould, 1844            #> 11 Melithreptus gularis gula… Melithrept… Melithreptus (… (Gould, 1837)          #> 12 Melithreptus gularis laet… Melithrept… Melithreptus (… Gould, 1875            #> 13 Not a taxa                 Not a taxa  NA              NA                     #> 14 Perameles gunnii Victoria… Perameles … Perameles gunn… NA                     #> 15 Petrogale lateralis (MacD… Petrogale … Petrogale late… Gould, 1842            #> 16 Pterostylis sp. Rock ledg… Pterostyli… Pterostylis     R.Br.                  #> 17 Spyridium eriocephalum va… Spyridium … Spyridium erio… J.M.Black              #> 18 Spyridium glabrisepalum    Spyridium … Spyridium erio… J.M.Black              #> 19 Thinornis cucullatus       Thinornis … Thinornis cucu… (Vieillot, 1818)       #> # ℹ abbreviated name: ¹​scientific_name_authorship #> # ℹ 15 more variables: taxon_concept_id <chr>, rank <ord>, match_type <chr>, #> #   kingdom <chr>, phylum <chr>, class <chr>, order <chr>, family <chr>, #> #   genus <chr>, species <chr>, vernacular_name <chr>, stamp <dttm>, #> #   subspecies <chr>, rank_adj <ord>, original_is_tri <lgl>   taxonomy$kingdom #> $lutaxa #> # A tibble: 17 × 6 #>    original_name     match_type matched_rank returned_rank taxa  original_is_tri #>    <chr>             <chr>      <ord>        <ord>         <chr> <lgl>           #>  1 Bettongia lesueu… exactMatch subspecies   kingdom       Anim… TRUE            #>  2 Charadrius mongo… higherMat… species      kingdom       Anim… FALSE           #>  3 Charadrius rubri… exactMatch species      kingdom       Anim… FALSE           #>  4 Eucalyptus        exactMatch genus        kingdom       Plan… FALSE           #>  5 Eucalyptus vimin… exactMatch species      kingdom       Plan… FALSE           #>  6 Eucalyptus vimin… exactMatch subspecies   kingdom       Plan… TRUE            #>  7 Gehyra montium (… canonical… species      kingdom       Anim… FALSE           #>  8 Korthalsella jap… higherMat… species      kingdom       Plan… TRUE            #>  9 Lagorchestes hir… canonical… species      kingdom       Anim… TRUE            #> 10 Melithreptus gul… exactMatch subspecies   kingdom       Anim… TRUE            #> 11 Melithreptus gul… exactMatch subspecies   kingdom       Anim… TRUE            #> 12 Perameles gunnii… exactMatch subspecies   kingdom       Anim… TRUE            #> 13 Petrogale latera… canonical… species      kingdom       Anim… TRUE            #> 14 Pterostylis sp. … exactMatch genus        kingdom       Plan… FALSE           #> 15 Spyridium erioce… exactMatch variety      kingdom       Plan… TRUE            #> 16 Spyridium glabri… exactMatch variety      kingdom       Plan… TRUE            #> 17 Thinornis cucull… exactMatch species      kingdom       Anim… FALSE           #>  #> $taxonomy #> # A tibble: 2 × 2 #>   taxa     kingdom  #>   <chr>    <chr>    #> 1 Animalia Animalia #> 2 Plantae  Plantae  #>    taxonomy$genus #> $lutaxa #> # A tibble: 17 × 6 #>    original_name     match_type matched_rank returned_rank taxa  original_is_tri #>    <chr>             <chr>      <ord>        <ord>         <chr> <lgl>           #>  1 Bettongia lesueu… exactMatch subspecies   genus         Bett… TRUE            #>  2 Charadrius mongo… higherMat… species      genus         Char… FALSE           #>  3 Charadrius rubri… exactMatch species      genus         Phal… FALSE           #>  4 Eucalyptus        exactMatch genus        genus         Euca… FALSE           #>  5 Eucalyptus vimin… exactMatch species      genus         Euca… FALSE           #>  6 Eucalyptus vimin… exactMatch subspecies   genus         Euca… TRUE            #>  7 Gehyra montium (… canonical… species      genus         Gehy… FALSE           #>  8 Korthalsella jap… higherMat… species      genus         Kort… TRUE            #>  9 Lagorchestes hir… canonical… species      genus         Lago… TRUE            #> 10 Melithreptus gul… exactMatch subspecies   genus         Meli… TRUE            #> 11 Melithreptus gul… exactMatch subspecies   genus         Meli… TRUE            #> 12 Perameles gunnii… exactMatch subspecies   genus         Pera… TRUE            #> 13 Petrogale latera… canonical… species      genus         Petr… TRUE            #> 14 Pterostylis sp. … exactMatch genus        genus         Pter… FALSE           #> 15 Spyridium erioce… exactMatch variety      genus         Spyr… TRUE            #> 16 Spyridium glabri… exactMatch variety      genus         Spyr… TRUE            #> 17 Thinornis cucull… exactMatch species      genus         Thin… FALSE           #>  #> $taxonomy #> # A tibble: 13 × 7 #>    taxa         kingdom  phylum     class         order           family   genus #>    <chr>        <chr>    <chr>      <chr>         <chr>           <chr>    <chr> #>  1 Bettongia    Animalia Chordata   Mammalia      Diprotodontia   Potoroi… Bett… #>  2 Charadrius   Animalia Chordata   Aves          Charadriiformes Charadr… Char… #>  3 Phalaropus   Animalia Chordata   Aves          Charadriiformes Scolopa… Phal… #>  4 Eucalyptus   Plantae  Charophyta Equisetopsida Myrtales        Myrtace… Euca… #>  5 Gehyra       Animalia Chordata   Reptilia      Squamata        Gekkoni… Gehy… #>  6 Korthalsella Plantae  Charophyta Equisetopsida Santalales      Santala… Kort… #>  7 Lagorchestes Animalia Chordata   Mammalia      Diprotodontia   Macropo… Lago… #>  8 Melithreptus Animalia Chordata   Aves          Passeriformes   Melipha… Meli… #>  9 Perameles    Animalia Chordata   Mammalia      Peramelemorphia Peramel… Pera… #> 10 Petrogale    Animalia Chordata   Mammalia      Diprotodontia   Macropo… Petr… #> 11 Pterostylis  Plantae  Charophyta Equisetopsida Asparagales     Orchida… Pter… #> 12 Spyridium    Plantae  Charophyta Equisetopsida Rosales         Rhamnac… Spyr… #> 13 Thinornis    Animalia Chordata   Aves          Charadriiformes Charadr… Thin… #>    taxonomy$species #> $lutaxa #> # A tibble: 17 × 6 #>    original_name     match_type matched_rank returned_rank taxa  original_is_tri #>    <chr>             <chr>      <ord>        <ord>         <chr> <lgl>           #>  1 Bettongia lesueu… exactMatch subspecies   species       Bett… TRUE            #>  2 Charadrius mongo… higherMat… species      species       Char… FALSE           #>  3 Charadrius rubri… exactMatch species      species       Phal… FALSE           #>  4 Eucalyptus        exactMatch genus        genus         Euca… FALSE           #>  5 Eucalyptus vimin… exactMatch species      species       Euca… FALSE           #>  6 Eucalyptus vimin… exactMatch subspecies   species       Euca… TRUE            #>  7 Gehyra montium (… canonical… species      species       Gehy… FALSE           #>  8 Korthalsella jap… higherMat… species      species       Kort… TRUE            #>  9 Lagorchestes hir… canonical… species      species       Lago… TRUE            #> 10 Melithreptus gul… exactMatch subspecies   species       Meli… TRUE            #> 11 Melithreptus gul… exactMatch subspecies   species       Meli… TRUE            #> 12 Perameles gunnii… exactMatch subspecies   species       Pera… TRUE            #> 13 Petrogale latera… canonical… species      species       Petr… TRUE            #> 14 Pterostylis sp. … exactMatch genus        genus         Pter… FALSE           #> 15 Spyridium erioce… exactMatch variety      species       Spyr… TRUE            #> 16 Spyridium glabri… exactMatch variety      species       Spyr… TRUE            #> 17 Thinornis cucull… exactMatch species      species       Thin… FALSE           #>  #> $taxonomy #> # A tibble: 14 × 8 #>    taxa                   kingdom  phylum     class   order family genus species #>    <chr>                  <chr>    <chr>      <chr>   <chr> <chr>  <chr> <chr>   #>  1 Bettongia lesueur      Animalia Chordata   Mammal… Dipr… Potor… Bett… Betton… #>  2 Charadrius mongolus    Animalia Chordata   Aves    Char… Chara… Char… Charad… #>  3 Phalaropus lobatus     Animalia Chordata   Aves    Char… Scolo… Phal… Phalar… #>  4 Eucalyptus             Plantae  Charophyta Equise… Myrt… Myrta… Euca… NA      #>  5 Eucalyptus viminalis   Plantae  Charophyta Equise… Myrt… Myrta… Euca… Eucaly… #>  6 Gehyra montium         Animalia Chordata   Reptil… Squa… Gekko… Gehy… Gehyra… #>  7 Korthalsella japonica  Plantae  Charophyta Equise… Sant… Santa… Kort… Kortha… #>  8 Lagorchestes hirsutus  Animalia Chordata   Mammal… Dipr… Macro… Lago… Lagorc… #>  9 Melithreptus gularis   Animalia Chordata   Aves    Pass… Melip… Meli… Melith… #> 10 Perameles gunnii       Animalia Chordata   Mammal… Pera… Peram… Pera… Perame… #> 11 Petrogale lateralis    Animalia Chordata   Mammal… Dipr… Macro… Petr… Petrog… #> 12 Pterostylis            Plantae  Charophyta Equise… Aspa… Orchi… Pter… NA      #> 13 Spyridium eriocephalum Plantae  Charophyta Equise… Rosa… Rhamn… Spyr… Spyrid… #> 14 Thinornis cucullatus   Animalia Chordata   Aves    Char… Chara… Thin… Thinor… #>    taxonomy$subspecies #> $lutaxa #> # A tibble: 17 × 6 #>    original_name     match_type matched_rank returned_rank taxa  original_is_tri #>    <chr>             <chr>      <ord>        <ord>         <chr> <lgl>           #>  1 Bettongia lesueu… exactMatch subspecies   subspecies    Bett… TRUE            #>  2 Charadrius mongo… higherMat… species      species       Char… FALSE           #>  3 Charadrius rubri… exactMatch species      species       Phal… FALSE           #>  4 Eucalyptus        exactMatch genus        genus         Euca… FALSE           #>  5 Eucalyptus vimin… exactMatch species      species       Euca… FALSE           #>  6 Eucalyptus vimin… exactMatch subspecies   subspecies    Euca… TRUE            #>  7 Gehyra montium (… canonical… species      species       Gehy… FALSE           #>  8 Korthalsella jap… higherMat… species      species       Kort… TRUE            #>  9 Lagorchestes hir… canonical… species      species       Lago… TRUE            #> 10 Melithreptus gul… exactMatch subspecies   subspecies    Meli… TRUE            #> 11 Melithreptus gul… exactMatch subspecies   subspecies    Meli… TRUE            #> 12 Perameles gunnii… exactMatch subspecies   subspecies    Pera… TRUE            #> 13 Petrogale latera… canonical… species      species       Petr… TRUE            #> 14 Pterostylis sp. … exactMatch genus        genus         Pter… FALSE           #> 15 Spyridium erioce… exactMatch variety      subspecies    Spyr… TRUE            #> 16 Spyridium glabri… exactMatch variety      subspecies    Spyr… TRUE            #> 17 Thinornis cucull… exactMatch species      species       Thin… FALSE           #>  #> $taxonomy #> # A tibble: 16 × 9 #>    taxa               kingdom phylum class order family genus species subspecies #>    <chr>              <chr>   <chr>  <chr> <chr> <chr>  <chr> <chr>   <chr>      #>  1 Bettongia lesueur… Animal… Chord… Mamm… Dipr… Potor… Bett… Betton… Bettongia… #>  2 Charadrius mongol… Animal… Chord… Aves  Char… Chara… Char… Charad… NA         #>  3 Phalaropus lobatus Animal… Chord… Aves  Char… Scolo… Phal… Phalar… NA         #>  4 Eucalyptus         Plantae Charo… Equi… Myrt… Myrta… Euca… NA      NA         #>  5 Eucalyptus vimina… Plantae Charo… Equi… Myrt… Myrta… Euca… Eucaly… NA         #>  6 Eucalyptus vimina… Plantae Charo… Equi… Myrt… Myrta… Euca… Eucaly… Eucalyptu… #>  7 Gehyra montium     Animal… Chord… Rept… Squa… Gekko… Gehy… Gehyra… NA         #>  8 Korthalsella japo… Plantae Charo… Equi… Sant… Santa… Kort… Kortha… NA         #>  9 Lagorchestes hirs… Animal… Chord… Mamm… Dipr… Macro… Lago… Lagorc… NA         #> 10 Melithreptus gula… Animal… Chord… Aves  Pass… Melip… Meli… Melith… Melithrep… #> 11 Melithreptus gula… Animal… Chord… Aves  Pass… Melip… Meli… Melith… Melithrep… #> 12 Perameles gunnii … Animal… Chord… Mamm… Pera… Peram… Pera… Perame… Perameles… #> 13 Petrogale lateral… Animal… Chord… Mamm… Dipr… Macro… Petr… Petrog… NA         #> 14 Pterostylis        Plantae Charo… Equi… Aspa… Orchi… Pter… NA      NA         #> 15 Spyridium eriocep… Plantae Charo… Equi… Rosa… Rhamn… Spyr… Spyrid… Spyridium… #> 16 Thinornis cuculla… Animal… Chord… Aves  Char… Chara… Thin… Thinor… NA         #>     # query more taxa (results are added to taxonomy_file but only the new taxa are returned (default `limit = TRUE`)   more_taxa <- tibble::tibble(original_name = c(\"Amytornis whitei\"                                                 , \"Amytornis striatus\"                                                 , \"Amytornis modestus (North, 1902)\"                                                 , \"Amytornis modestus modestus\"                                                 , \"Amytornis modestus cowarie\"                                                 )                               )    taxonomy <- make_taxonomy(df = more_taxa                             , taxonomy_file = temp_file                             , needed_ranks = c(\"species\")                             ) #> Joining with `by = join_by(original_name)` #> Joining with `by = join_by(original_name)` #> Joining with `by = join_by(original_name)` #> saving results to H:/temp/nige\\RtmpQlqYDQ\\file4d145d492b1d.parquet #> The following were completely unmatched: Galaxias sp. nov. Hunter and Not a taxa. Consider providing more taxonomic levels, or an override, for each unmatched taxa? #> Joining with `by = join_by(original_name)` #> Joining with `by = join_by(original_name)`    taxonomy$species #> $lutaxa #> # A tibble: 5 × 6 #>   original_name      match_type matched_rank returned_rank taxa  original_is_tri #>   <chr>              <chr>      <ord>        <ord>         <chr> <lgl>           #> 1 Amytornis modestu… canonical… species      species       Amyt… FALSE           #> 2 Amytornis modestu… exactMatch subspecies   species       Amyt… TRUE            #> 3 Amytornis modestu… exactMatch subspecies   species       Amyt… TRUE            #> 4 Amytornis striatus exactMatch species      species       Amyt… FALSE           #> 5 Amytornis whitei   exactMatch species      species       Amyt… FALSE           #>  #> $taxonomy #> # A tibble: 3 × 8 #>   taxa               kingdom  phylum   class order         family  genus species #>   <chr>              <chr>    <chr>    <chr> <chr>         <chr>   <chr> <chr>   #> 1 Amytornis modestus Animalia Chordata Aves  Passeriformes Maluri… Amyt… Amytor… #> 2 Amytornis striatus Animalia Chordata Aves  Passeriformes Maluri… Amyt… Amytor… #> 3 Amytornis whitei   Animalia Chordata Aves  Passeriformes Maluri… Amyt… Amytor… #>     # no dataframe supplied - all results in taxonomy_file returned   taxonomy <- make_taxonomy(taxonomy_file = temp_file                             , needed_ranks = c(\"subspecies\")                             ) #> Joining with `by = join_by(original_name)`    taxonomy$subspecies #> $lutaxa #> # A tibble: 22 × 6 #>    original_name     match_type matched_rank returned_rank taxa  original_is_tri #>    <chr>             <chr>      <ord>        <ord>         <chr> <lgl>           #>  1 Amytornis modest… canonical… species      species       Amyt… FALSE           #>  2 Amytornis modest… exactMatch subspecies   subspecies    Amyt… TRUE            #>  3 Amytornis modest… exactMatch subspecies   subspecies    Amyt… TRUE            #>  4 Amytornis striat… exactMatch species      species       Amyt… FALSE           #>  5 Amytornis whitei  exactMatch species      species       Amyt… FALSE           #>  6 Bettongia lesueu… exactMatch subspecies   subspecies    Bett… TRUE            #>  7 Charadrius mongo… higherMat… species      species       Char… FALSE           #>  8 Charadrius rubri… exactMatch species      species       Phal… FALSE           #>  9 Eucalyptus        exactMatch genus        genus         Euca… FALSE           #> 10 Eucalyptus vimin… exactMatch species      species       Euca… FALSE           #> # ℹ 12 more rows #>  #> $taxonomy #> # A tibble: 21 × 9 #>    taxa               kingdom phylum class order family genus species subspecies #>    <chr>              <chr>   <chr>  <chr> <chr> <chr>  <chr> <chr>   <chr>      #>  1 Amytornis modestus Animal… Chord… Aves  Pass… Malur… Amyt… Amytor… NA         #>  2 Amytornis modestu… Animal… Chord… Aves  Pass… Malur… Amyt… Amytor… Amytornis… #>  3 Amytornis modestu… Animal… Chord… Aves  Pass… Malur… Amyt… Amytor… Amytornis… #>  4 Amytornis striatus Animal… Chord… Aves  Pass… Malur… Amyt… Amytor… NA         #>  5 Amytornis whitei   Animal… Chord… Aves  Pass… Malur… Amyt… Amytor… NA         #>  6 Bettongia lesueur… Animal… Chord… Mamm… Dipr… Potor… Bett… Betton… Bettongia… #>  7 Charadrius mongol… Animal… Chord… Aves  Char… Chara… Char… Charad… NA         #>  8 Phalaropus lobatus Animal… Chord… Aves  Char… Scolo… Phal… Phalar… NA         #>  9 Eucalyptus         Plantae Charo… Equi… Myrt… Myrta… Euca… NA      NA         #> 10 Eucalyptus vimina… Plantae Charo… Equi… Myrt… Myrta… Euca… Eucaly… NA         #> # ℹ 11 more rows #>     # overrrides   overrides <- envClean::taxonomy_overrides    # C. rubricollis binned to Phalarope lobatus at species level!   taxonomy <- make_taxonomy(df = overrides                             , taxonomy_file = temp_file                             , needed_ranks = c(\"species\", \"subspecies\")                             ) #> Joining with `by = join_by(original_name)` #> Joining with `by = join_by(original_name)` #> Joining with `by = join_by(original_name)` #> saving results to H:/temp/nige\\RtmpQlqYDQ\\file4d145d492b1d.parquet #> The following were completely unmatched: Galaxias sp. nov. Hunter and Not a taxa. Consider providing more taxonomic levels, or an override, for each unmatched taxa? #> Joining with `by = join_by(original_name)` #> Joining with `by = join_by(original_name)` #> Joining with `by = join_by(original_name)`    taxonomy$species$lutaxa %>%     dplyr::filter(grepl(\"rubricollis\", original_name)) #> # A tibble: 1 × 6 #>   original_name      match_type matched_rank returned_rank taxa  original_is_tri #>   <chr>              <chr>      <ord>        <ord>         <chr> <lgl>           #> 1 Charadrius rubric… exactMatch species      species       Phal… FALSE              # add in override - C. rubricollis is binned to T. cucullatus at species level   taxonomy <- make_taxonomy(df = overrides                             , taxonomy_file = temp_file                             , needed_ranks = c(\"species\", \"subspecies\")                             , overrides = overrides                             ) #> Joining with `by = join_by(original_name)` #> Joining with `by = join_by(original_name)` #> Joining with `by = join_by(original_name)` #> Joining with `by = join_by(original_name, returned_rank)` #> Joining with `by = join_by(original_name)` #> Joining with `by = join_by(original_name)` #> saving results to H:/temp/nige\\RtmpQlqYDQ\\file4d145d492b1d.parquet #> The following were completely unmatched: Galaxias sp. nov. Hunter and Not a taxa. Consider providing more taxonomic levels, or an override, for each unmatched taxa? #> Joining with `by = join_by(original_name)` #> Joining with `by = join_by(original_name)` #> Joining with `by = join_by(original_name)`    taxonomy$species$lutaxa %>%     dplyr::filter(grepl(\"rubricollis\", original_name)) #> # A tibble: 1 × 7 #>   original_name      match_type matched_rank returned_rank taxa  original_is_tri #>   <chr>              <chr>      <ord>        <ord>         <chr> <lgl>           #> 1 Charadrius rubric… exactMatch species      species       Thin… FALSE           #> # ℹ 1 more variable: override <lgl>    # clean up   rm(taxonomy)   unlist(paste0(temp_file, \".parquet\")) #> [1] \"H:/temp/nige\\\\RtmpQlqYDQ\\\\file4d145d492b1d.parquet\""},{"path":"https://acanthiza.github.io/envClean/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://acanthiza.github.io/envClean/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://acanthiza.github.io/envClean/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://acanthiza.github.io/envClean/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://acanthiza.github.io/envClean/reference/rec_vis_sit_tax.html","id":null,"dir":"Reference","previous_headings":"","what":"How many records, visits, sites and taxa in a dataframe — rec_vis_sit_tax","title":"How many records, visits, sites and taxa in a dataframe — rec_vis_sit_tax","text":"many records, visits, sites taxa dataframe","code":""},{"path":"https://acanthiza.github.io/envClean/reference/rec_vis_sit_tax.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"How many records, visits, sites and taxa in a dataframe — rec_vis_sit_tax","text":"","code":"rec_vis_sit_tax(df, site_cols, visit_cols, taxa_cols)"},{"path":"https://acanthiza.github.io/envClean/reference/rec_vis_sit_tax.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"How many records, visits, sites and taxa in a dataframe — rec_vis_sit_tax","text":"df Dataframe taxa records. site_cols Name column(s) defining sites. visit_cols Name column(s) defining visits. taxa_cols Name column(s) defining taxa.","code":""},{"path":"https://acanthiza.github.io/envClean/reference/rec_vis_sit_tax.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"How many records, visits, sites and taxa in a dataframe — rec_vis_sit_tax","text":"One row dataframe","code":""},{"path":"https://acanthiza.github.io/envClean/reference/reduce_geo_rel.html","id":null,"dir":"Reference","previous_headings":"","what":"Reduce data frame to a single spatial reliability within a context — reduce_geo_rel","title":"Reduce data frame to a single spatial reliability within a context — reduce_geo_rel","text":"Reduce data frame single spatial reliability within context","code":""},{"path":"https://acanthiza.github.io/envClean/reference/reduce_geo_rel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reduce data frame to a single spatial reliability within a context — reduce_geo_rel","text":"","code":"reduce_geo_rel(   df,   dist_col = \"rel_metres\",   dist_min = 100,   dist_max = 250,   context,   extra_cols = \"taxa\",   over_ride_na = NULL,   over_ride_metres = NULL )"},{"path":"https://acanthiza.github.io/envClean/reference/reduce_geo_rel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reduce data frame to a single spatial reliability within a context — reduce_geo_rel","text":"df Dataframe. dist_col Character. Name column containing spatial reliability. dist_min Numeric. units dist_col. target spatial reliability filtered later. dist_max Numeric. units dist_col. cases, good reason believe dist_col estimate spatial reliability. cases identified over_ride_metres instances dist_col <= dist_max . cases, dist_col_adj contain dist_min rather dist_col. needed over_ride_metres used context Character. column names defining context. extra_cols Character. Extra columns added context. over_ride_na Named list. List names must column names. names over_ride_na matched column names df values list element given value dist_min. mainly used prevent filtering data sources concept equivalent rel_metres. over_ride_metres Named list. List names must column names. names over_ride_metres matched column names df values list element given value dist_min.","code":""},{"path":"https://acanthiza.github.io/envClean/reference/reduce_geo_rel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reduce data frame to a single spatial reliability within a context — reduce_geo_rel","text":"dataframe single rel_metres_adj value per context.","code":""},{"path":"https://acanthiza.github.io/envClean/reference/taxonomy_overrides.html","id":null,"dir":"Reference","previous_headings":"","what":"Manual taxonomic overrides — taxonomy_overrides","title":"Manual taxonomic overrides — taxonomy_overrides","text":"Can used argument envClean::make_taxa_taxonomy().","code":""},{"path":"https://acanthiza.github.io/envClean/reference/taxonomy_overrides.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Manual taxonomic overrides — taxonomy_overrides","text":"","code":"taxonomy_overrides"},{"path":"https://acanthiza.github.io/envClean/reference/taxonomy_overrides.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Manual taxonomic overrides — taxonomy_overrides","text":"data frame 9 rows 5 variables: original_name Character. Original names taxa taxa_to_search Character. Try searching taxa (often original_name) use_ Character. number use_ columns, use_species /use_subspecies. match found taxa_to_search names used rank imply note Usually rationale inclusion","code":""}]
